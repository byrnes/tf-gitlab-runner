# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          export TF_VERSION="0.14.6"
          apt-get -y update && apt-get -y install curl python3 py3-pip
          python3 -m pip install requests
          echo "Installing Terraform $TF_VERSION"
          wget "https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_"$TF_VERSION"_linux_amd64.zip"
          unzip "terraform_"$TF_VERSION"_linux_amd64.zip"
          chmod +x terraform
          TF_IN_AUTOMATION="true"
          echo "Running Terraform"
          TF_CLI_CONFIG_FILE=$(pwd)"/config.tfrc.json" ./terraform init -input=false
          TF_CLI_CONFIG_FILE=$(pwd)"/config.tfrc.json" ./terraform apply -input=false -auto-approve
          TF_CLI_CONFIG_FILE=$(pwd)"/config.tfrc.json" ./terraform destroy -input=false -auto-approve
